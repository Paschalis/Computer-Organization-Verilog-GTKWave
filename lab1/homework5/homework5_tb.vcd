$date
	Tue Dec  1 16:58:46 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module homework5_tb $end
$var wire 8 ! Sum [7:0] $end
$var wire 1 " Cout $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$scope module DUT $end
$var wire 8 % A [7:0] $end
$var wire 8 & B [7:0] $end
$var wire 1 ' c7 $end
$var wire 1 ( c6 $end
$var wire 1 ) c5 $end
$var wire 1 * c4 $end
$var wire 1 + c3 $end
$var wire 1 , c2 $end
$var wire 1 - c1 $end
$var wire 8 . Sum [7:0] $end
$var wire 1 " Cout $end
$scope module U0 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 1 Cin $end
$var wire 1 - Cout $end
$var wire 1 2 ha_2_cout $end
$var wire 1 3 ha_1_sum $end
$var wire 1 4 ha_1_cout $end
$var wire 1 5 Sum $end
$scope module U0 $end
$var wire 1 / A $end
$var wire 1 0 B $end
$var wire 1 4 Cout $end
$var wire 1 3 Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 3 A $end
$var wire 1 1 B $end
$var wire 1 2 Cout $end
$var wire 1 5 Sum $end
$upscope $end
$upscope $end
$scope module U1 $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 - Cin $end
$var wire 1 , Cout $end
$var wire 1 8 ha_2_cout $end
$var wire 1 9 ha_1_sum $end
$var wire 1 : ha_1_cout $end
$var wire 1 ; Sum $end
$scope module U0 $end
$var wire 1 6 A $end
$var wire 1 7 B $end
$var wire 1 : Cout $end
$var wire 1 9 Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 9 A $end
$var wire 1 - B $end
$var wire 1 8 Cout $end
$var wire 1 ; Sum $end
$upscope $end
$upscope $end
$scope module U2 $end
$var wire 1 < A $end
$var wire 1 = B $end
$var wire 1 , Cin $end
$var wire 1 + Cout $end
$var wire 1 > ha_2_cout $end
$var wire 1 ? ha_1_sum $end
$var wire 1 @ ha_1_cout $end
$var wire 1 A Sum $end
$scope module U0 $end
$var wire 1 < A $end
$var wire 1 = B $end
$var wire 1 @ Cout $end
$var wire 1 ? Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 ? A $end
$var wire 1 , B $end
$var wire 1 > Cout $end
$var wire 1 A Sum $end
$upscope $end
$upscope $end
$scope module U3 $end
$var wire 1 B A $end
$var wire 1 C B $end
$var wire 1 + Cin $end
$var wire 1 * Cout $end
$var wire 1 D ha_2_cout $end
$var wire 1 E ha_1_sum $end
$var wire 1 F ha_1_cout $end
$var wire 1 G Sum $end
$scope module U0 $end
$var wire 1 B A $end
$var wire 1 C B $end
$var wire 1 F Cout $end
$var wire 1 E Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 E A $end
$var wire 1 + B $end
$var wire 1 D Cout $end
$var wire 1 G Sum $end
$upscope $end
$upscope $end
$scope module U4 $end
$var wire 1 H A $end
$var wire 1 I B $end
$var wire 1 * Cin $end
$var wire 1 ) Cout $end
$var wire 1 J ha_2_cout $end
$var wire 1 K ha_1_sum $end
$var wire 1 L ha_1_cout $end
$var wire 1 M Sum $end
$scope module U0 $end
$var wire 1 H A $end
$var wire 1 I B $end
$var wire 1 L Cout $end
$var wire 1 K Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 K A $end
$var wire 1 * B $end
$var wire 1 J Cout $end
$var wire 1 M Sum $end
$upscope $end
$upscope $end
$scope module U5 $end
$var wire 1 N A $end
$var wire 1 O B $end
$var wire 1 ) Cin $end
$var wire 1 ( Cout $end
$var wire 1 P ha_2_cout $end
$var wire 1 Q ha_1_sum $end
$var wire 1 R ha_1_cout $end
$var wire 1 S Sum $end
$scope module U0 $end
$var wire 1 N A $end
$var wire 1 O B $end
$var wire 1 R Cout $end
$var wire 1 Q Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 Q A $end
$var wire 1 ) B $end
$var wire 1 P Cout $end
$var wire 1 S Sum $end
$upscope $end
$upscope $end
$scope module U6 $end
$var wire 1 T A $end
$var wire 1 U B $end
$var wire 1 ( Cin $end
$var wire 1 ' Cout $end
$var wire 1 V ha_2_cout $end
$var wire 1 W ha_1_sum $end
$var wire 1 X ha_1_cout $end
$var wire 1 Y Sum $end
$scope module U0 $end
$var wire 1 T A $end
$var wire 1 U B $end
$var wire 1 X Cout $end
$var wire 1 W Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 W A $end
$var wire 1 ( B $end
$var wire 1 V Cout $end
$var wire 1 Y Sum $end
$upscope $end
$upscope $end
$scope module U7 $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 ' Cin $end
$var wire 1 " Cout $end
$var wire 1 \ ha_2_cout $end
$var wire 1 ] ha_1_sum $end
$var wire 1 ^ ha_1_cout $end
$var wire 1 _ Sum $end
$scope module U0 $end
$var wire 1 Z A $end
$var wire 1 [ B $end
$var wire 1 ^ Cout $end
$var wire 1 ] Sum $end
$upscope $end
$scope module U1 $end
$var wire 1 ] A $end
$var wire 1 ' B $end
$var wire 1 \ Cout $end
$var wire 1 _ Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
1G
0F
1E
0D
1C
0B
0A
0@
0?
0>
0=
0<
1;
0:
19
08
17
06
05
04
03
02
01
00
0/
b1010 .
0-
0,
0+
0*
0)
0(
0'
b1010 &
b0 %
b1010 $
b0 #
0"
b1010 !
$end
#100
1"
1A
1\
15
1M
b111111 !
b111111 .
1S
1'
1?
1]
13
1K
1Q
1X
1=
1U
1[
1/
1H
1N
1T
b11001110 $
b11001110 &
b1110001 #
b1110001 %
#200
1V
0"
0S
1(
0Y
1'
1_
0\
b10001111 !
b10001111 .
0M
0Q
1R
1W
0X
0]
0K
10
0=
0C
1O
0U
0[
0/
1<
1B
0H
b100011 $
b100011 &
b1101100 #
b1101100 %
#300
1S
0_
1)
0'
1J
1Y
0V
0G
1*
b1100111 !
b1100111 .
0M
0(
0E
1F
1K
0R
1C
0O
1U
1H
0N
0T
b1001011 $
b1001011 &
b11100 #
b11100 %
#400
